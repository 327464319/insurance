<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.lcf.ins.dao.UserMapper">
	<resultMap id="BaseResultMap" type="org.lcf.ins.entity.User">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="number_id" jdbcType="VARCHAR" property="numberId" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="gender" jdbcType="VARCHAR" property="gender" />
		<result column="address" jdbcType="VARCHAR" property="address" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="birthday" jdbcType="VARCHAR" property="birthday" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
<<<<<<< HEAD
									<foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
=======
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
>>>>>>> b16026bdc3aa043d6527e5195e2b0b0220640a87
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
<<<<<<< HEAD
			<foreach collection="example.oredCriteria" item="criteria" separator="or">
=======
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
>>>>>>> b16026bdc3aa043d6527e5195e2b0b0220640a87
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
<<<<<<< HEAD
									<foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
=======
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
>>>>>>> b16026bdc3aa043d6527e5195e2b0b0220640a87
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, name, number_id, phone, gender, address, email, password, birthday
	</sql>
<<<<<<< HEAD
	<select id="selectByExample" parameterType="org.lcf.ins.entity.UserExample" resultMap="BaseResultMap">
=======
	<select id="selectByExample" parameterType="org.lcf.ins.entity.UserExample"
		resultMap="BaseResultMap">
>>>>>>> b16026bdc3aa043d6527e5195e2b0b0220640a87
		select
		<if test="distinct">
			distinct
		</if>
		'true' as QUERYID,
		<include refid="Base_Column_List" />
		from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
<<<<<<< HEAD
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
=======
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
>>>>>>> b16026bdc3aa043d6527e5195e2b0b0220640a87
		select
		<include refid="Base_Column_List" />
		from user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		select * from user
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="org.lcf.ins.entity.UserExample">
		delete from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="org.lcf.ins.entity.User">
		insert into user (id, name, number_id,
		phone, gender, address,
		email, password, birthday
		)
		values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{numberId,jdbcType=VARCHAR},
		#{phone,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
		#{birthday,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="org.lcf.ins.entity.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="numberId != null">
				number_id,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="gender != null">
				gender,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="birthday != null">
				birthday,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="numberId != null">
				#{numberId,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				#{gender,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				#{address,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				#{birthday,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
<<<<<<< HEAD
	<select id="countByExample" parameterType="org.lcf.ins.entity.UserExample" resultType="java.lang.Long">
=======
	<select id="countByExample" parameterType="org.lcf.ins.entity.UserExample"
		resultType="java.lang.Long">
>>>>>>> b16026bdc3aa043d6527e5195e2b0b0220640a87
		select count(*) from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update user
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.numberId != null">
				number_id = #{record.numberId,jdbcType=VARCHAR},
			</if>
			<if test="record.phone != null">
				phone = #{record.phone,jdbcType=VARCHAR},
			</if>
			<if test="record.gender != null">
				gender = #{record.gender,jdbcType=VARCHAR},
			</if>
			<if test="record.address != null">
				address = #{record.address,jdbcType=VARCHAR},
			</if>
			<if test="record.email != null">
				email = #{record.email,jdbcType=VARCHAR},
			</if>
			<if test="record.password != null">
				password = #{record.password,jdbcType=VARCHAR},
			</if>
			<if test="record.birthday != null">
				birthday = #{record.birthday,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update user
		set id = #{record.id,jdbcType=INTEGER},
		name = #{record.name,jdbcType=VARCHAR},
		number_id = #{record.numberId,jdbcType=VARCHAR},
		phone = #{record.phone,jdbcType=VARCHAR},
		gender = #{record.gender,jdbcType=VARCHAR},
		address = #{record.address,jdbcType=VARCHAR},
		email = #{record.email,jdbcType=VARCHAR},
		password = #{record.password,jdbcType=VARCHAR},
		birthday = #{record.birthday,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="org.lcf.ins.entity.User">
		update user
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="numberId != null">
				number_id = #{numberId,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="gender != null">
				gender = #{gender,jdbcType=VARCHAR},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				birthday = #{birthday,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.lcf.ins.entity.User">
		update user
		set name = #{name,jdbcType=VARCHAR},
		number_id = #{numberId,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR},
		gender = #{gender,jdbcType=VARCHAR},
		address = #{address,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		birthday = #{birthday,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>